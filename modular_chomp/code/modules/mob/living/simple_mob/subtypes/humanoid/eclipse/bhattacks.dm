/mob/living/simple_mob/mechanical/mecha/eclipse/proc/teleport_attack(atom/target, var/next_cycle, var/tele_miss)
	// Teleport attack.
	if(!target)
		to_chat(src, span_warning("There's nothing to teleport to."))
		return FALSE

	var/list/nearby_things = range(tele_miss, target)
	var/list/valid_turfs = list()

	// All this work to just go to a non-dense tile.
	for(var/turf/potential_turf in nearby_things)
		var/valid_turf = TRUE
		if(potential_turf.density)
			continue
		for(var/atom/movable/AM in potential_turf)
			if(AM.density)
				valid_turf = FALSE
		if(valid_turf)
			valid_turfs.Add(potential_turf)

	if(!(valid_turfs.len))
		to_chat(src, span_warning("There wasn't an unoccupied spot to teleport to."))
		return FALSE

	var/turf/target_turf = pick(valid_turfs)
	var/turf/T = get_turf(src)

	var/datum/effect/effect/system/spark_spread/s1 = new /datum/effect/effect/system/spark_spread
	s1.set_up(5, 1, T)
	var/datum/effect/effect/system/spark_spread/s2 = new /datum/effect/effect/system/spark_spread
	s2.set_up(5, 1, target_turf)


	T.visible_message(span_warning("\The [src] vanishes!"))
	s1.start()

	forceMove(target_turf)
	playsound(target_turf, 'sound/effects/phasein.ogg', 50, 1)
	to_chat(src, span_notice("You teleport to \the [target_turf]."))

	target_turf.visible_message(span_warning("\The [src] appears!"))
	s2.start()
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/singleproj/(atom/target, var/next_cycle)
	if(!target)
		return
	var/obj/item/projectile/P = new specialattackprojectile(get_turf(src))
	P.launch_projectile(target, BP_TORSO, src)
	attackcycle = next_cycle


/mob/living/simple_mob/mechanical/mecha/eclipse/proc/bullet_heck(atom/target, var/horix, var/vertiy) //horix is the X vaule, vertix is the Y vaule
	var/obj/item/projectile/P = new specialattackprojectile(get_turf(src))
	var/turf = locate(src.x+horix, src.y+vertiy, src.z)
	target = turf
	P.launch_projectile(target, BP_TORSO, src)

//spinny dual blades
/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spin(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 0, -7)
	bullet_heck(target, 0, 7)
	bullet_heck(target, -7, 0)
	bullet_heck(target, 7, 0)
	addtimer(CALLBACK(src, PROC_REF(dual_spinA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -1, -7)
	bullet_heck(target, 1, 7)
	bullet_heck(target, -7, 1)
	bullet_heck(target, 7, -1)
	addtimer(CALLBACK(src, PROC_REF(dual_spinB), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinB(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -2, -7)
	bullet_heck(target, 2, 7)
	bullet_heck(target, -7, 2)
	bullet_heck(target, 7, -2)
	addtimer(CALLBACK(src, PROC_REF(dual_spinC), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinC(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -3, -7)
	bullet_heck(target, 3, 7)
	bullet_heck(target, -7, 3)
	bullet_heck(target, 7, -3)
	addtimer(CALLBACK(src, PROC_REF(dual_spinD), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinD(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -4, -7)
	bullet_heck(target, 4, 7)
	bullet_heck(target, -7, 4)
	bullet_heck(target, 7, -4)
	addtimer(CALLBACK(src, PROC_REF(dual_spinE), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinE(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -5, -7)
	bullet_heck(target, 5, 7)
	bullet_heck(target, -7, 5)
	bullet_heck(target, 7, -5)
	addtimer(CALLBACK(src, PROC_REF(dual_spinF), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinF(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -6, -7)
	bullet_heck(target, 6, 7)
	bullet_heck(target, -7, 6)
	bullet_heck(target, 7, -6)
	addtimer(CALLBACK(src, PROC_REF(dual_spinG), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinG(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -7)
	bullet_heck(target, 7, 7)
	bullet_heck(target, -7, 7)
	bullet_heck(target, 7, -7)
	addtimer(CALLBACK(src, PROC_REF(dual_spinH), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinH(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -6)
	bullet_heck(target, 7, 6)
	bullet_heck(target, -6, 7)
	bullet_heck(target, 6, -7)
	addtimer(CALLBACK(src, PROC_REF(dual_spinI), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinI(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -5)
	bullet_heck(target, 7, 5)
	bullet_heck(target, -5, 7)
	bullet_heck(target, 5, -7)
	addtimer(CALLBACK(src, PROC_REF(dual_spinJ), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinJ(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -4)
	bullet_heck(target, 7, 4)
	bullet_heck(target, -4, 7)
	bullet_heck(target, 4, -7)
	addtimer(CALLBACK(src, PROC_REF(dual_spinK), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinK(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -3)
	bullet_heck(target, 7, 3)
	bullet_heck(target, -3, 7)
	bullet_heck(target, 3, -7)
	addtimer(CALLBACK(src, PROC_REF(dual_spinL), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinL(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -2)
	bullet_heck(target, 7, 2)
	bullet_heck(target, -2, 7)
	bullet_heck(target, 2, -7)
	addtimer(CALLBACK(src, PROC_REF(dual_spinM), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinM(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -1)
	bullet_heck(target, 7, 1)
	bullet_heck(target, -1, 7)
	bullet_heck(target, 1, -7)
	addtimer(CALLBACK(src, PROC_REF(dual_spinN), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_spinN(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 0)
	bullet_heck(target, 7, 0)
	bullet_heck(target, 0, 7)
	bullet_heck(target, 0, -7)
	if(prob(50)) //coin flip to reverse
		addtimer(CALLBACK(src, PROC_REF(fdual_spin), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)
	else
		addtimer(CALLBACK(src, PROC_REF(rdual_spin), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

//the four spin finish
/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spin(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 1)
	bullet_heck(target, 7, -1)
	bullet_heck(target, 1, 7)
	bullet_heck(target, -1, -7)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 2)
	bullet_heck(target, 7, -2)
	bullet_heck(target, 2, 7)
	bullet_heck(target, -2, -7)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinB), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinB(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 3)
	bullet_heck(target, 7, -3)
	bullet_heck(target, 3, 7)
	bullet_heck(target, -3, -7)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinC), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinC(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 4)
	bullet_heck(target, 7, -4)
	bullet_heck(target, 4, 7)
	bullet_heck(target, -4, -7)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinD), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinD(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 5)
	bullet_heck(target, 7, -5)
	bullet_heck(target, 5, 7)
	bullet_heck(target, -5, -7)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinE), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinE(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 6)
	bullet_heck(target, 7, -6)
	bullet_heck(target, 6, 7)
	bullet_heck(target, -6, -7)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinF), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinF(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 7)
	bullet_heck(target, 7, -7)
	bullet_heck(target, 7, 7)
	bullet_heck(target, -7, -7)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinG), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinG(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -6, 7)
	bullet_heck(target, 6, -7)
	bullet_heck(target, 7, 6)
	bullet_heck(target, -7, -6)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinH), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinH(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -5, 7)
	bullet_heck(target, 5, -7)
	bullet_heck(target, 7, 5)
	bullet_heck(target, -7, -5)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinI), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinI(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -4, 7)
	bullet_heck(target, 4, -7)
	bullet_heck(target, 7, 4)
	bullet_heck(target, -7, -4)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinJ), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinJ(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -3, 7)
	bullet_heck(target, 3, -7)
	bullet_heck(target, 7, 3)
	bullet_heck(target, -7, -3)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinK), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinK(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -2, 7)
	bullet_heck(target, 2, -7)
	bullet_heck(target, 7, 2)
	bullet_heck(target, -7, -2)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinL), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinL(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -1, 7)
	bullet_heck(target, 1, -7)
	bullet_heck(target, 7, 1)
	bullet_heck(target, -7, -1)
	addtimer(CALLBACK(src, PROC_REF(fdual_spinM), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fdual_spinM(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 0, 7)
	bullet_heck(target, 0, -7)
	bullet_heck(target, 7, 0)
	bullet_heck(target, -7, -0)
	attackcycle = next_cycle

//the reverse
/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinM(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 0, -7)
	bullet_heck(target, 0, 7)
	bullet_heck(target, 7, 0)
	bullet_heck(target, -7, 0)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinL(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -1, -7)
	bullet_heck(target, 1, 7)
	bullet_heck(target, 7, -1)
	bullet_heck(target, -7, 1)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinM), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinK(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -2, -7)
	bullet_heck(target, 2, 7)
	bullet_heck(target, 7, -2)
	bullet_heck(target, -7, 2)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinL), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinJ(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -3, -7)
	bullet_heck(target, 3, 7)
	bullet_heck(target, 7, -3)
	bullet_heck(target, -7, 3)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinK), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinI(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -4, -7)
	bullet_heck(target, 4, 7)
	bullet_heck(target, 7, -4)
	bullet_heck(target, -7, 4)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinJ), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinH(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -5, -7)
	bullet_heck(target, 5, 7)
	bullet_heck(target, 7, -5)
	bullet_heck(target, -7, 5)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinI), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinG(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -6, -7)
	bullet_heck(target, 6, 7)
	bullet_heck(target, 7, -6)
	bullet_heck(target, -7, 6)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinH), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinF(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -7)
	bullet_heck(target, 7, 7)
	bullet_heck(target, 7, -7)
	bullet_heck(target, -7, 7)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinG), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinE(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -6)
	bullet_heck(target, 7, 6)
	bullet_heck(target, 6, -7)
	bullet_heck(target, -6, 7)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinF), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinD(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -5)
	bullet_heck(target, 7, 5)
	bullet_heck(target, 5, -7)
	bullet_heck(target, -5, 7)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinE), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinC(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -4)
	bullet_heck(target, 7, 4)
	bullet_heck(target, 4, -7)
	bullet_heck(target, -4, 7)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinD), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinB(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -3)
	bullet_heck(target, 7, 3)
	bullet_heck(target, 3, -7)
	bullet_heck(target, -3, 7)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinC), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spinA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -2)
	bullet_heck(target, 7, 2)
	bullet_heck(target, 2, -7)
	bullet_heck(target, -2, 7)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinB), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rdual_spin(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -1)
	bullet_heck(target, 7, 1)
	bullet_heck(target, 1, -7)
	bullet_heck(target, -1, 7)
	addtimer(CALLBACK(src, PROC_REF(rdual_spinA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

//two spinning blade
/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spin(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 0, -7)
	bullet_heck(target, 0, 7)
	addtimer(CALLBACK(src, PROC_REF(cross_spinA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -1, -7)
	bullet_heck(target, 1, 7)
	addtimer(CALLBACK(src, PROC_REF(cross_spinB), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinB(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -2, -7)
	bullet_heck(target, 2, 7)
	addtimer(CALLBACK(src, PROC_REF(cross_spinC), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinC(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -3, -7)
	bullet_heck(target, 3, 7)
	addtimer(CALLBACK(src, PROC_REF(cross_spinD), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinD(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -4, -7)
	bullet_heck(target, 4, 7)
	addtimer(CALLBACK(src, PROC_REF(cross_spinE), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinE(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -5, -7)
	bullet_heck(target, 5, 7)
	addtimer(CALLBACK(src, PROC_REF(cross_spinF), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinF(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -6, -7)
	bullet_heck(target, 6, 7)
	addtimer(CALLBACK(src, PROC_REF(cross_spinG), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinG(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -7)
	bullet_heck(target, 7, 7)
	addtimer(CALLBACK(src, PROC_REF(cross_spinH), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinH(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -6)
	bullet_heck(target, 7, 6)
	addtimer(CALLBACK(src, PROC_REF(cross_spinI), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinI(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -5)
	bullet_heck(target, 7, 5)
	addtimer(CALLBACK(src, PROC_REF(cross_spinJ), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinJ(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -4)
	bullet_heck(target, 7, 4)
	addtimer(CALLBACK(src, PROC_REF(cross_spinK), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinK(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -3)
	bullet_heck(target, 7, 3)
	addtimer(CALLBACK(src, PROC_REF(cross_spinL), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinL(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -2)
	bullet_heck(target, 7, 2)
	addtimer(CALLBACK(src, PROC_REF(cross_spinM), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinM(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -1)
	bullet_heck(target, 7, 1)
	addtimer(CALLBACK(src, PROC_REF(cross_spinN), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cross_spinN(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 0)
	bullet_heck(target, 7, 0)
	if(prob(50)) //coin flip to reverse
		addtimer(CALLBACK(src, PROC_REF(fcross_spin), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)
	else
		addtimer(CALLBACK(src, PROC_REF(rcross_spin), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

//the dual spin finish
/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spin(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 1)
	bullet_heck(target, 7, -1)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 2)
	bullet_heck(target, 7, -2)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinB), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinB(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 3)
	bullet_heck(target, 7, -3)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinC), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinC(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 4)
	bullet_heck(target, 7, -4)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinD), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinD(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 5)
	bullet_heck(target, 7, -5)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinE), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinE(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 6)
	bullet_heck(target, 7, -6)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinF), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinF(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 7)
	bullet_heck(target, 7, -7)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinG), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinG(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -6, 7)
	bullet_heck(target, 6, -7)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinH), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinH(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -5, 7)
	bullet_heck(target, 5, -7)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinI), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinI(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -4, 7)
	bullet_heck(target, 4, -7)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinJ), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinJ(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -3, 7)
	bullet_heck(target, 3, -7)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinK), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinK(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -2, 7)
	bullet_heck(target, 2, -7)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinL), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinL(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -1, 7)
	bullet_heck(target, 1, -7)
	addtimer(CALLBACK(src, PROC_REF(fcross_spinM), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/fcross_spinM(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 0, 7)
	bullet_heck(target, 0, -7)
	attackcycle = next_cycle

//the dual spin reverse
/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinM(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 0, -7)
	bullet_heck(target, 0, 7)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinL(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -1, -7)
	bullet_heck(target, 1, 7)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinM), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinK(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -2, -7)
	bullet_heck(target, 2, 7)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinL), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinJ(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -3, -7)
	bullet_heck(target, 3, 7)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinK), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinI(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -4, -7)
	bullet_heck(target, 4, 7)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinJ), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinH(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -5, -7)
	bullet_heck(target, 5, 7)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinI), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinG(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -6, -7)
	bullet_heck(target, 6, 7)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinH), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinF(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -7)
	bullet_heck(target, 7, 7)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinG), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinE(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -6)
	bullet_heck(target, 7, 6)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinF), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinD(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -5)
	bullet_heck(target, 7, 5)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinE), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinC(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -4)
	bullet_heck(target, 7, 4)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinD), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinB(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -3)
	bullet_heck(target, 7, 3)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinC), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spinA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -2)
	bullet_heck(target, 7, 2)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinB), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rcross_spin(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -1)
	bullet_heck(target, 7, 1)
	addtimer(CALLBACK(src, PROC_REF(rcross_spinA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)
//bursts attack
/mob/living/simple_mob/mechanical/mecha/eclipse/proc/burst_one(atom/target)
	bullet_heck(target, 0, -1)
	bullet_heck(target, 0, 1)
	bullet_heck(target, 1, 0)
	bullet_heck(target, -1, 0)
	bullet_heck(target, 1, -1)
	bullet_heck(target, -1, -1)
	bullet_heck(target, 1, 1)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/burst_two(atom/target)
	bullet_heck(target, 0, -2)
	bullet_heck(target, 1, -2)
	bullet_heck(target, 2, -2)
	bullet_heck(target, -1, -2)
	bullet_heck(target, -2, -2)
	bullet_heck(target, 0, 2)
	bullet_heck(target, 1, 2)
	bullet_heck(target, 2, 2)
	bullet_heck(target, 2, 1)
	bullet_heck(target, 2, 0)
	bullet_heck(target, 2, -1)
	bullet_heck(target, 2, -2)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/burst_three(atom/target)
	bullet_heck(target, 0, -3)
	bullet_heck(target, 1, -3)
	bullet_heck(target, 2, -3)
	bullet_heck(target, 3, -3)
	bullet_heck(target, -1, -3)
	bullet_heck(target, -2, -3)
	bullet_heck(target, -3, -3)
	bullet_heck(target, 3, 0)
	bullet_heck(target, 3, 1)
	bullet_heck(target, 3, 2)
	bullet_heck(target, 3, 3)
	bullet_heck(target, 3, -1)
	bullet_heck(target, 3, -2)
	bullet_heck(target, 3, -3)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/burst_four(atom/target)
	bullet_heck(target, 0, -4)
	bullet_heck(target, 1, -4)
	bullet_heck(target, 2, -4)
	bullet_heck(target, 3, -4)
	bullet_heck(target, 4, -4)
	bullet_heck(target, 4, -3)
	bullet_heck(target, 4, -2)
	bullet_heck(target, 4, -1)
	bullet_heck(target, 4, 0)
	bullet_heck(target, 4, 1)
	bullet_heck(target, 4, 2)
	bullet_heck(target, 4, 3)
	bullet_heck(target, 4, 4)
	bullet_heck(target, 3, 4)
	bullet_heck(target, 2, 4)
	bullet_heck(target, 1, 4)
	bullet_heck(target, 0, 4)
	bullet_heck(target, -1, 4)
	bullet_heck(target, -2, 4)
	bullet_heck(target, -3, 4)
	bullet_heck(target, -4, 4)
	bullet_heck(target, -4, 3)
	bullet_heck(target, -4, 2)
	bullet_heck(target, -4, 1)
	bullet_heck(target, -4, 0)
	bullet_heck(target, -4, -1)
	bullet_heck(target, -4, -2)
	bullet_heck(target, -4, -3)
	bullet_heck(target, -4, -4)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/checker_board(atom/target, var/next_cycle)
	bullet_heck(target, -1, 1)
	bullet_heck(target, 1, 1)
	bullet_heck(target, 1, -1)
	bullet_heck(target, -1, -1)
	bullet_heck(target, 0, 2)
	bullet_heck(target, 0, -2)
	bullet_heck(target, 2, 0)
	bullet_heck(target, -2, 0)
	bullet_heck(target, -2, 2)
	bullet_heck(target, 2, 2)
	bullet_heck(target, 2, -2)
	bullet_heck(target, -2, -2)
	bullet_heck(target, -3, 1)
	bullet_heck(target, -3, -1)
	bullet_heck(target, 3, 1)
	bullet_heck(target, 3, -1)
	bullet_heck(target, 1, 3)
	bullet_heck(target, -1, 3)
	bullet_heck(target, 1, -3)
	bullet_heck(target, -1, -3)
	bullet_heck(target, -3, 3)
	bullet_heck(target, 3, 3)
	bullet_heck(target, 3, -3)
	bullet_heck(target, -3, -3)
	attackcycle = next_cycle


/mob/living/simple_mob/mechanical/mecha/eclipse/proc/chain_burst(atom/target, var/next_cycle, var/fire_delay)
	burst_one(target)
	addtimer(CALLBACK(src, PROC_REF(chain_burstA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/chain_burstA(atom/target, var/next_cycle, var/fire_delay)
	burst_two(target)
	addtimer(CALLBACK(src, PROC_REF(chain_burstB), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/chain_burstB(atom/target, var/next_cycle, var/fire_delay)
	burst_three(target)
	addtimer(CALLBACK(src, PROC_REF(chain_burstC), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/chain_burstC(atom/target, var/next_cycle, var/fire_delay)
	burst_four(target)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/dual_burst(atom/target, var/next_cycle)
	burst_two(target)
	burst_four(target)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/giant_burst(atom/target, var/next_cycle)
	burst_four(target)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/star_burst(atom/target, var/next_cycle)
	bullet_heck(target, 0, 7)
	bullet_heck(target, 0, -7)
	bullet_heck(target, 7, 7)
	bullet_heck(target, -7, 7)
	bullet_heck(target, -7, -7)
	bullet_heck(target, 7, -7)
	bullet_heck(target, -7, 0)
	bullet_heck(target, 7, 0)
	attackcycle = next_cycle

//random
/mob/living/simple_mob/mechanical/mecha/eclipse/proc/random_firing(atom/target, var/amount, var/next_cycle, var/fire_delay)
	var/rngx = rand(-7,7)
	var/rngy = rand(-7,7)
	if(!target)
		return
	bullet_heck(target, rngx, rngy)
	amount--
	if(amount > 0)
		addtimer(CALLBACK(src, PROC_REF(random_firing), target, amount, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)
	else
		attackcycle = next_cycle


/mob/living/simple_mob/mechanical/mecha/eclipse/proc/quad_random_firing(atom/target, var/amount, var/next_cycle, var/fire_delay)
	var/rngx = rand(-7,7)
	var/rngy = rand(-7,7)
	var/rngxx = rand(-7,7)
	var/rngyy = rand(-7,7)
	if(!target)
		return
	bullet_heck(target, rngx, rngy)
	bullet_heck(target, rngxx, rngyy)
	bullet_heck(target, rngxx, rngy)
	bullet_heck(target, rngx, rngyy)
	amount--
	if(amount > 0)
		addtimer(CALLBACK(src, PROC_REF(quad_random_firing), target, amount, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)
	else
		attackcycle = next_cycle

//perscion
/mob/living/simple_mob/mechanical/mecha/eclipse/proc/hole_in_wall(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -7)
	bullet_heck(target, -7, -6)
	bullet_heck(target, -7, -5)
	bullet_heck(target, -7, -4)
	bullet_heck(target, -6, -7)
	bullet_heck(target, -5, -7)
	bullet_heck(target, -4, -7)
	bullet_heck(target, 7, -7)
	bullet_heck(target, 6, -7)
	bullet_heck(target, 5, -7)
	bullet_heck(target, 4, -7)
	bullet_heck(target, 7, -6)
	bullet_heck(target, 7, -5)
	bullet_heck(target, 7, -4)
	bullet_heck(target, 7, 7)
	bullet_heck(target, 7, 6)
	bullet_heck(target, 7, 5)
	bullet_heck(target, 7, 4)
	bullet_heck(target, 6, 7)
	bullet_heck(target, 5, 7)
	bullet_heck(target, 4, 7)
	bullet_heck(target, -7, 7)
	bullet_heck(target, -7, 6)
	bullet_heck(target, -7, 5)
	bullet_heck(target, -7, 4)
	bullet_heck(target, -6, 7)
	bullet_heck(target, -5, 7)
	bullet_heck(target, -4, 7)
	addtimer(CALLBACK(src, PROC_REF(hole_in_wallA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/hole_in_wallA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -4)
	bullet_heck(target, -7, -3)
	bullet_heck(target, -7, -2)
	bullet_heck(target, -7, -1)
	bullet_heck(target, -7, 0)
	bullet_heck(target, -7, 1)
	bullet_heck(target, -7, 2)
	bullet_heck(target, -7, 3)
	bullet_heck(target, -7, 4)
	bullet_heck(target, -4, -7)
	bullet_heck(target, -3, -7)
	bullet_heck(target, -2, -7)
	bullet_heck(target, -1, -7)
	bullet_heck(target, 0, -7)
	bullet_heck(target, 1, -7)
	bullet_heck(target, 2, -7)
	bullet_heck(target, 3, -7)
	bullet_heck(target, 4, -7)
	bullet_heck(target, 4, 7)
	bullet_heck(target, 3, 7)
	bullet_heck(target, 2, 7)
	bullet_heck(target, 1, 7)
	bullet_heck(target, 0, 7)
	bullet_heck(target, -1, 7)
	bullet_heck(target, -2, 7)
	bullet_heck(target, -3, 7)
	bullet_heck(target, -4, 7)
	bullet_heck(target, 7, -4)
	bullet_heck(target, 7, -3)
	bullet_heck(target, 7, -2)
	bullet_heck(target, 7, -1)
	bullet_heck(target, 7, 0)
	bullet_heck(target, 7, 1)
	bullet_heck(target, 7, 2)
	bullet_heck(target, 7, 3)
	bullet_heck(target, 7, 4)
	addtimer(CALLBACK(src, PROC_REF(hole_in_wallB), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/hole_in_wallB(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, -7)
	bullet_heck(target, -7, -6)
	bullet_heck(target, -7, -5)
	bullet_heck(target, -7, -4)
	bullet_heck(target, -6, -7)
	bullet_heck(target, -5, -7)
	bullet_heck(target, -4, -7)
	bullet_heck(target, 7, -7)
	bullet_heck(target, 6, -7)
	bullet_heck(target, 5, -7)
	bullet_heck(target, 4, -7)
	bullet_heck(target, 7, -6)
	bullet_heck(target, 7, -5)
	bullet_heck(target, 7, -4)
	bullet_heck(target, 7, 7)
	bullet_heck(target, 7, 6)
	bullet_heck(target, 7, 5)
	bullet_heck(target, 7, 4)
	bullet_heck(target, 6, 7)
	bullet_heck(target, 5, 7)
	bullet_heck(target, 4, 7)
	bullet_heck(target, -7, 7)
	bullet_heck(target, -7, 6)
	bullet_heck(target, -7, 5)
	bullet_heck(target, -7, 4)
	bullet_heck(target, -6, 7)
	bullet_heck(target, -5, 7)
	bullet_heck(target, -4, 7)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/bomb_lines(atom/A, var/next_cycle)
	if(!A)
		return
	var/list/potential_targets = ai_holder.list_targets()
	for(var/atom/entry in potential_targets)
		if(istype(entry, /mob/living/simple_mob/humanoid/eclipse))
			potential_targets -= entry
	if(potential_targets.len)
		var/iteration = clamp(potential_targets.len, 1, 3)
		for(var/i = 0, i < iteration, i++)
			if(!(potential_targets.len))
				break
			var/mob/target = pick(potential_targets)
			potential_targets -= target
			spawn_lines(target, next_cycle)


/mob/living/simple_mob/mechanical/mecha/eclipse/proc/spawn_lines(atom/target, var/next_cycle)
	var/alignment = rand(1,2)	// 1 for vertical, 2 for horizontal
	var/list/line_range = list()
	var/turf/T = get_turf(target)
	line_range += T
	for(var/i = 1, i <= 7, i++)
		switch(alignment)
			if(1)
				if(T.x-i > 0)
					line_range += locate(T.x-i, T.y-i, T.z)
				if(T.x+i <= world.maxx)
					line_range += locate(T.x+i, T.y+i, T.z)
				if(T.y-i > 0)
					line_range += locate(T.x+i, T.y-i, T.z)
				if(T.y+i <= world.maxy)
					line_range += locate(T.x-i, T.y+i, T.z)
			if(2)
				if(T.x-i > 0)
					line_range += locate(T.x-i, T.y, T.z)
				if(T.x+i <= world.maxx)
					line_range += locate(T.x+i, T.y, T.z)
				if(T.y-i > 0)
					line_range += locate(T.x, T.y-i, T.z)
				if(T.y+i <= world.maxy)
					line_range += locate(T.x, T.y+i, T.z)
	for(var/turf/dropspot in line_range)
		new artidrop(dropspot)
	attackcycle = next_cycle



/mob/living/simple_mob/mechanical/mecha/eclipse/proc/bomb_chaos(atom/A, var/next_cycle)
	if(!A)
		return
	var/list/potential_targets = ai_holder.list_targets()
	for(var/atom/entry in potential_targets)
		if(istype(entry, /mob/living/simple_mob/humanoid/eclipse))
			potential_targets -= entry
	if(potential_targets.len)
		var/iteration = clamp(potential_targets.len, 1, 3)
		for(var/i = 0, i < iteration, i++)
			if(!(potential_targets.len))
				break
			var/mob/target = pick(potential_targets)
			potential_targets -= target
			chaos_lines(target, next_cycle)


/mob/living/simple_mob/mechanical/mecha/eclipse/proc/chaos_lines(atom/target, var/next_cycle)
	var/alignment = rand(1,2)
	var/list/line_range = list()
	var/turf/T = get_turf(target)
	line_range += T
	for(var/i = 1, i <= 7, i++)
		switch(alignment)
			if(1)
				if(T.x-i > 0)
					var/zed = rand(1,3)
					line_range += locate(T.x+zed, T.y-i, T.z)
				if(T.x+i <= world.maxx)
					var/zed = rand(1,3)
					line_range += locate(T.x+zed, T.y+i, T.z)
				if(T.y-i > 0)
					var/zed = rand(1,3)
					line_range += locate(T.x+i, T.y+zed, T.z)
				if(T.y+i <= world.maxy)
					var/zed = rand(1,3)
					line_range += locate(T.x-i, T.y+zed, T.z)
			if(2)
				if(T.x-i > 0)
					var/zed = rand(1,3)
					line_range += locate(T.x-i, T.y-zed, T.z)
				if(T.x+i <= world.maxx)
					var/zed = rand(1,3)
					line_range += locate(T.x+i, T.y-zed, T.z)
				if(T.y-i > 0)
					var/zed = rand(1,3)
					line_range += locate(T.x-zed, T.y-i, T.z)
				if(T.y+i <= world.maxy)
					var/zed = rand(1,3)
					line_range += locate(T.x-zed, T.y+i, T.z)
	for(var/turf/dropspot in line_range)
		new artidrop(dropspot)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rising_star(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 7, 0)
	bullet_heck(target, -7, 0)
	bullet_heck(target, 0, 7)
	bullet_heck(target, 0, -7)
	bullet_heck(target, 7, 7)
	bullet_heck(target, 7, -7)
	bullet_heck(target, -7, 7)
	bullet_heck(target, -7, -7)
	addtimer(CALLBACK(src, PROC_REF(rising_starA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rising_starA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 7, -4)
	bullet_heck(target, -7, 4)
	bullet_heck(target, 4, 7)
	bullet_heck(target, -4, -7)
	bullet_heck(target, 7, -4)
	bullet_heck(target, -7, 4)
	bullet_heck(target, 4, 7)
	bullet_heck(target, -4, -7)
	addtimer(CALLBACK(src, PROC_REF(rising_starB), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/rising_starB(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 7, -1)
	bullet_heck(target, -7, 1)
	bullet_heck(target, 1, 7)
	bullet_heck(target, -1, -7)
	bullet_heck(target, 5, 7)
	bullet_heck(target, 7, -5)
	bullet_heck(target, -5, 7)
	bullet_heck(target, -7, -5)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/gattlingfire(atom/target, var/next_cycle, var/amount, var/fire_delay)
	if(!target)
		return
	var/obj/item/projectile/P = new specialattackprojectile(get_turf(src))
	P.launch_projectile(target, BP_TORSO, src)
	amount--
	if(amount > 0)
		addtimer(CALLBACK(src, PROC_REF(gattlingfire), target, next_cycle, fire_delay, amount), fire_delay, TIMER_DELETE_ME)
	else
		attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/death_wall(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 7, 0)
	bullet_heck(target, 7, 1)
	bullet_heck(target, 7, 2)
	bullet_heck(target, 7, 3)
	bullet_heck(target, 7, 4)
	bullet_heck(target, 7, 5)
	bullet_heck(target, 7, 6)
	bullet_heck(target, 7, 7)
	bullet_heck(target, 7, -1)
	bullet_heck(target, 7, -2)
	bullet_heck(target, 7, -3)
	bullet_heck(target, 7, -4)
	bullet_heck(target, 7, -5)
	bullet_heck(target, 7, -6)
	bullet_heck(target, 7, -7)
	addtimer(CALLBACK(src, PROC_REF(death_wallA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/death_wallA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 0)
	bullet_heck(target, -7, 1)
	bullet_heck(target, -7, 2)
	bullet_heck(target, -7, 3)
	bullet_heck(target, -7, 4)
	bullet_heck(target, -7, 5)
	bullet_heck(target, -7, 6)
	bullet_heck(target, -7, 7)
	bullet_heck(target, -7, -1)
	bullet_heck(target, -7, -2)
	bullet_heck(target, -7, -3)
	bullet_heck(target, -7, -4)
	bullet_heck(target, -7, -5)
	bullet_heck(target, -7, -6)
	bullet_heck(target, -7, -7)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/death_wallR(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, -7, 0)
	bullet_heck(target, -7, 1)
	bullet_heck(target, -7, 2)
	bullet_heck(target, -7, 3)
	bullet_heck(target, -7, 4)
	bullet_heck(target, -7, 5)
	bullet_heck(target, -7, 6)
	bullet_heck(target, -7, 7)
	bullet_heck(target, -7, -1)
	bullet_heck(target, -7, -2)
	bullet_heck(target, -7, -3)
	bullet_heck(target, -7, -4)
	bullet_heck(target, -7, -5)
	bullet_heck(target, -7, -6)
	bullet_heck(target, -7, -7)
	addtimer(CALLBACK(src, PROC_REF(death_wallRA), target, next_cycle, fire_delay), fire_delay, TIMER_DELETE_ME)

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/death_wallRA(atom/target, var/next_cycle, var/fire_delay)
	bullet_heck(target, 7, 0)
	bullet_heck(target, 7, 1)
	bullet_heck(target, 7, 2)
	bullet_heck(target, 7, 3)
	bullet_heck(target, 7, 4)
	bullet_heck(target, 7, 5)
	bullet_heck(target, 7, 6)
	bullet_heck(target, 7, 7)
	bullet_heck(target, 7, -1)
	bullet_heck(target, 7, -2)
	bullet_heck(target, 7, -3)
	bullet_heck(target, 7, -4)
	bullet_heck(target, 7, -5)
	bullet_heck(target, 7, -6)
	bullet_heck(target, 7, -7)
	attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cutoff(atom/target, var/next_cycle, var/fire_delay, var/amount)
	if(!target)
		return
	bullet_heck(target, 7, 0)
	bullet_heck(target, -7, 0)
	bullet_heck(target, 0, 7)
	bullet_heck(target, 0, -7)
	amount--
	if(amount > 0)
		addtimer(CALLBACK(src, PROC_REF(cutoff), target, next_cycle, fire_delay, amount), fire_delay, TIMER_DELETE_ME)
	else
		attackcycle = next_cycle

/mob/living/simple_mob/mechanical/mecha/eclipse/proc/cutoff_ulti(atom/target, var/next_cycle, var/fire_delay, var/amount)
	if(!target)
		return
	bullet_heck(target, 7, 0)
	bullet_heck(target, -7, 0)
	bullet_heck(target, 0, 7)
	bullet_heck(target, 0, -7)
	bullet_heck(target, 7, 7)
	bullet_heck(target, -7, -7)
	bullet_heck(target, -7, 7)
	bullet_heck(target, 7, -7)
	amount--
	if(amount > 0)
		addtimer(CALLBACK(src, PROC_REF(cutoff_ulti), target, next_cycle, fire_delay, amount), fire_delay, TIMER_DELETE_ME)
	else
		attackcycle = next_cycle
